// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentManagement.Data.DBContexts;

namespace StudentManagement.Data.Migrations
{
    [DbContext(typeof(StudentDbContext))]
    [Migration("20210331031724_MakeNullable_EntraceExamId")]
    partial class MakeNullable_EntraceExamId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<long>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<long>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<long>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<long>", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<long>", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("StudentManagement.Data.DBContexts.ApplicationUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("OfficialEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RecoveryEmail")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("RecoveryMobileNo")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("StudentManagement.Data.DBContexts.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.AdmissiontypeMaster", b =>
                {
                    b.Property<long>("AdmissiontypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Admissiontype")
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AdmissiontypeId");

                    b.ToTable("AdmissiontypeMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.BatchMaster", b =>
                {
                    b.Property<long>("BatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BatchId");

                    b.ToTable("BatchMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.BloodgroupMaster", b =>
                {
                    b.Property<long>("BloodgroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bloodgroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BloodgroupId");

                    b.ToTable("BloodgroupMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.BranchMaster", b =>
                {
                    b.Property<long>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BranchId");

                    b.HasIndex("CourseId");

                    b.ToTable("BranchMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.CampusMaster", b =>
                {
                    b.Property<long>("CampusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CampusId");

                    b.ToTable("CampusMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.CategoryMaster", b =>
                {
                    b.Property<long>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("CategoryMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.CityMaster", b =>
                {
                    b.Property<long>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.HasKey("CityId");

                    b.HasIndex("StateId");

                    b.ToTable("CityMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.ClassMaster", b =>
                {
                    b.Property<long>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BranchId")
                        .HasColumnType("bigint");

                    b.Property<long>("CampusId")
                        .HasColumnType("bigint");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("CollegeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("SessionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("YearSemesterId")
                        .HasColumnType("bigint");

                    b.HasKey("ClassId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CampusId");

                    b.HasIndex("CollegeId");

                    b.HasIndex("CourseId");

                    b.HasIndex("SessionId");

                    b.HasIndex("YearSemesterId");

                    b.ToTable("ClassMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.ClassStudentDetail", b =>
                {
                    b.Property<long>("ClassStudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClassId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("ClassStudentId");

                    b.HasIndex("ClassId");

                    b.HasIndex("StudentId");

                    b.ToTable("ClassStudentDetail");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.ClassSubjectDetail", b =>
                {
                    b.Property<long>("ClassSubjectDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ActaulL")
                        .HasColumnType("bigint");

                    b.Property<long>("CT")
                        .HasColumnType("bigint");

                    b.Property<long>("ClassId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Credit")
                        .HasColumnType("bigint");

                    b.Property<long>("ESE")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("L")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("P")
                        .HasColumnType("bigint");

                    b.Property<long>("SubjectId")
                        .HasColumnType("bigint");

                    b.Property<long>("T")
                        .HasColumnType("bigint");

                    b.Property<long>("TA")
                        .HasColumnType("bigint");

                    b.HasKey("ClassSubjectDetailId");

                    b.HasIndex("ClassId");

                    b.HasIndex("SubjectId");

                    b.ToTable("ClassSubjectDetail");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.ClassSubjectTeacherDetail", b =>
                {
                    b.Property<long>("ClassSubjectTeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ClassSubjectDetailId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("TeacherId")
                        .HasColumnType("bigint");

                    b.HasKey("ClassSubjectTeacherId");

                    b.HasIndex("ClassSubjectDetailId");

                    b.ToTable("ClassSubjectTeacherDetail");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.CollegeDetail", b =>
                {
                    b.Property<long>("CollegeDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdharNumber")
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("AdmissionBatchTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("AdmissionTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("BatchId")
                        .HasColumnType("bigint");

                    b.Property<long>("CampusId")
                        .HasColumnType("bigint");

                    b.Property<long>("CollegeId")
                        .HasColumnType("bigint");

                    b.Property<string>("CollegeRollNumber")
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UniversityExamRoleNo")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Universityenrollmentnumber")
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("YearSemesterId")
                        .HasColumnType("bigint");

                    b.Property<long?>("branchId")
                        .HasColumnType("bigint");

                    b.HasKey("CollegeDetailId");

                    b.HasIndex("AdmissionBatchTypeId");

                    b.HasIndex("AdmissionTypeId");

                    b.HasIndex("BatchId");

                    b.HasIndex("CampusId");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.HasIndex("YearSemesterId");

                    b.HasIndex("branchId");

                    b.ToTable("CollegeDetail");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.CollegeMaster", b =>
                {
                    b.Property<long>("CollegeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CampusId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CollegeId");

                    b.HasIndex("CampusId");

                    b.ToTable("CollegeMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.CountryMaster", b =>
                {
                    b.Property<long>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CountryId");

                    b.ToTable("CountryMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.CourseMaster", b =>
                {
                    b.Property<long>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CourseId");

                    b.ToTable("CourseMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.DegreeMaster", b =>
                {
                    b.Property<long>("DegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DegreeId");

                    b.ToTable("DegreeMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.DiplomaMaster", b =>
                {
                    b.Property<long>("DiplomaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DiplomaId");

                    b.ToTable("DiplomaMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.Documents", b =>
                {
                    b.Property<long>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adharcard")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BirthCertificate")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CasteCertificate")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ColoredPhotograph")
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DegreeMarksheetPath")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DiplomaMarksheetPath")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DomicileCertificate")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EntranceExamMasrksheetPath")
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PGMarksheetPath")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Passport")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TenMarksheetPath")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TwelveMarksheetPath")
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("DocumentId");

                    b.HasIndex("UserId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.EntranceExamMaster", b =>
                {
                    b.Property<long>("EntranceExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntranceExamName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EntranceExamId");

                    b.ToTable("EntranceExamMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.ErrorLog", b =>
                {
                    b.Property<long>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetSite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LogId");

                    b.ToTable("ErrorLogs");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.GenderMaster", b =>
                {
                    b.Property<long>("GenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("GenId");

                    b.ToTable("GenderMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.HistoryClassMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BranchId")
                        .HasColumnType("bigint");

                    b.Property<long>("CampusId")
                        .HasColumnType("bigint");

                    b.Property<long>("ClassId")
                        .HasColumnType("bigint");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("CollegeId")
                        .HasColumnType("bigint");

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("SessionId")
                        .HasColumnType("bigint");

                    b.Property<long>("YearSemesterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("HistoryClassMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.HistoryClassStudentDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ClassId")
                        .HasColumnType("bigint");

                    b.Property<long>("ClassStudentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("ClassStudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("HistoryClassStudentDetail");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.HistoryClassSubjectDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ActaulL")
                        .HasColumnType("bigint");

                    b.Property<long>("CT")
                        .HasColumnType("bigint");

                    b.Property<long?>("ClassId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ClassSubjectDetailId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<long>("Credit")
                        .HasColumnType("bigint");

                    b.Property<long>("ESE")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("L")
                        .HasColumnType("bigint");

                    b.Property<long>("P")
                        .HasColumnType("bigint");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<long>("SubjectDepartmentId")
                        .HasColumnType("bigint");

                    b.Property<long>("SubjectId")
                        .HasColumnType("bigint");

                    b.Property<long>("T")
                        .HasColumnType("bigint");

                    b.Property<long>("TA")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("ClassSubjectDetailId");

                    b.ToTable("HistoryClassSubjectDetail");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.HistoryClassSubjectTeacherDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ClassSubjectDetailId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ClassSubjectTeacherId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("TeacherId")
                        .HasColumnType("bigint");

                    b.Property<string>("TeacherName")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ClassSubjectDetailId");

                    b.ToTable("HistoryClassSubjectTeacherDetail");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.HistoryCollegeDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdharNumber")
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("AdmissionBatchTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("AdmissionTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("BatchId")
                        .HasColumnType("bigint");

                    b.Property<long>("CampusId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CollegeDetailId")
                        .HasColumnType("bigint");

                    b.Property<long>("CollegeId")
                        .HasColumnType("bigint");

                    b.Property<string>("CollegeRollNumber")
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UniversityExamRoleNo")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Universityenrollmentnumber")
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("YearSemesterId")
                        .HasColumnType("bigint");

                    b.Property<long?>("branchId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AdmissionBatchTypeId");

                    b.HasIndex("AdmissionTypeId");

                    b.HasIndex("BatchId");

                    b.HasIndex("CampusId");

                    b.HasIndex("CollegeDetailId");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.HasIndex("YearSemesterId");

                    b.HasIndex("branchId");

                    b.ToTable("HistoryCollegeDetail");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.HistoryDocuments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adharcard")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BirthCertificate")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CasteCertificate")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ColoredPhotograph")
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DegreeMarksheetPath")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DiplomaMarksheetPath")
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("DocumentId")
                        .HasColumnType("bigint");

                    b.Property<string>("DomicileCertificate")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EntranceExamMasrksheetPath")
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PGMarksheetPath")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Passport")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TenMarksheetPath")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TwelveMarksheetPath")
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("UserId");

                    b.ToTable("HistoryDocuments");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.HistoryParentDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FatherAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FatherCityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("FatherCountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("FatherEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherMobile1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherMobile2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherPincode")
                        .HasColumnType("varchar(50)");

                    b.Property<long?>("FatherStateId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LGAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LGCityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LGCountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("LGEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LGMobile1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LGMobile2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LGName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LGPincode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("LGStateId")
                        .HasColumnType("bigint");

                    b.Property<string>("MotherAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MotherCityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MotherCountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("MotherEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherMobile1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherMobile2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherPincode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("MotherStateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ParentDetailId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RelationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FatherCityId");

                    b.HasIndex("FatherCountryId");

                    b.HasIndex("FatherStateId");

                    b.HasIndex("LGCityId");

                    b.HasIndex("LGCountryId");

                    b.HasIndex("LGStateId");

                    b.HasIndex("MotherCityId");

                    b.HasIndex("MotherCountryId");

                    b.HasIndex("MotherStateId");

                    b.HasIndex("ParentDetailId");

                    b.HasIndex("RelationId");

                    b.HasIndex("UserId");

                    b.ToTable("HistoryParentDetail");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.HistoryPersonalDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BloodGroupdId")
                        .HasColumnType("bigint");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("CountryPincode")
                        .HasColumnType("varchar(10)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2(7)");

                    b.Property<long>("GenderId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile1")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Mobile2")
                        .HasColumnType("nvarchar(20)");

                    b.Property<long?>("PersonalDetailId")
                        .HasColumnType("bigint");

                    b.Property<string>("PersonalEmail1")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PersonalEmail2")
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("ReligionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.Property<string>("StatePincode")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("StayAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StayRelationId")
                        .HasColumnType("bigint");

                    b.Property<long>("StayTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BloodGroupdId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("GenderId");

                    b.HasIndex("PersonalDetailId");

                    b.HasIndex("ReligionId");

                    b.HasIndex("StateId");

                    b.HasIndex("StayRelationId");

                    b.HasIndex("StayTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("HistoryPersonalDetail");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.HistoryStudentAttendance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AttendanceBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("datetime");

                    b.Property<long>("AttendanceId")
                        .HasColumnType("bigint");

                    b.Property<long>("ClassId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("LectureNoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("SubjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("HistoryStudentAttendance");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.HistoryStudentAttendanceDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AttendanceDetail")
                        .HasColumnType("bigint");

                    b.Property<long>("AttendanceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPresent")
                        .HasColumnType("bit");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("HistoryStudentAttendanceDetail");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.HistoryStudentQualication", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DegreeBoardName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("DegreeCGPA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("DegreeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DegreeMarkingScheameId")
                        .HasColumnType("bigint");

                    b.Property<string>("DegreeSchoolName")
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("DegreeYear")
                        .HasColumnType("int");

                    b.Property<string>("DiplomaBoardName")
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal?>("DiplomaCGPA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("DiplomaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DiplomaMarkingScheameId")
                        .HasColumnType("bigint");

                    b.Property<string>("DiplomaSchoolName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("DiplomaYear")
                        .HasColumnType("int");

                    b.Property<string>("EntranceExamAir")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EntranceExamCatefgoryRank")
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("EntranceExamId")
                        .HasColumnType("bigint");

                    b.Property<string>("EntranceExamMarkObt")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EntranceExamRollno")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("EntranceExamYear")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEntrance")
                        .HasColumnType("bit");

                    b.Property<string>("PGDegreeBoardName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("PGDegreeCGPA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("PGDegreeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PGDegreeMarkingScheameId")
                        .HasColumnType("bigint");

                    b.Property<string>("PGDegreeSchoolName")
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("PGDegreeYear")
                        .HasColumnType("int");

                    b.Property<long?>("StudentQualicationId")
                        .HasColumnType("bigint");

                    b.Property<string>("TenBoardName")
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal?>("TenCGPA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("TenMarkingScheameId")
                        .HasColumnType("bigint");

                    b.Property<string>("TenSchoolName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TenYearOfPassing")
                        .HasColumnType("int");

                    b.Property<string>("TwelveBoardName")
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal?>("TwelveCGPA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("TwelveMakingScheameId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("TwelvePCM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TwelveSchoolName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TwelveYearOfPassing")
                        .HasColumnType("int");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DegreeId");

                    b.HasIndex("DegreeMarkingScheameId");

                    b.HasIndex("DiplomaId");

                    b.HasIndex("DiplomaMarkingScheameId");

                    b.HasIndex("EntranceExamId");

                    b.HasIndex("PGDegreeId");

                    b.HasIndex("PGDegreeMarkingScheameId");

                    b.HasIndex("StudentQualicationId");

                    b.HasIndex("TenMarkingScheameId");

                    b.HasIndex("TwelveMakingScheameId");

                    b.HasIndex("UserId");

                    b.ToTable("HistoryStudentQualication");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.LectureMaster", b =>
                {
                    b.Property<long>("LectureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LactureName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("LectureEndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("LectureStartTime")
                        .HasColumnType("time");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LectureId");

                    b.ToTable("LectureMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.MarkingScheame", b =>
                {
                    b.Property<long>("MarkingShchemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MarkingShchem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MarkingShchemId");

                    b.ToTable("MarkingScheame");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.PGDegreeMaster", b =>
                {
                    b.Property<long>("PGDegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PGDegreeName")
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("PGDegreeId");

                    b.ToTable("PGDegreeMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.ParentDetail", b =>
                {
                    b.Property<long>("ParentDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FatherAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FatherCityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("FatherCountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("FatherEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherMobile1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherMobile2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherPincode")
                        .HasColumnType("varchar(50)");

                    b.Property<long?>("FatherStateId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LGAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LGCityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LGCountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("LGEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LGMobile1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LGMobile2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LGName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LGPincode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("LGStateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotherAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MotherCityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MotherCountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("MotherEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherMobile1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherMobile2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherPincode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("MotherStateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RelationId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("ParentDetailId");

                    b.HasIndex("FatherCityId");

                    b.HasIndex("FatherCountryId");

                    b.HasIndex("FatherStateId");

                    b.HasIndex("LGCityId");

                    b.HasIndex("LGCountryId");

                    b.HasIndex("LGStateId");

                    b.HasIndex("MotherCityId");

                    b.HasIndex("MotherCountryId");

                    b.HasIndex("MotherStateId");

                    b.HasIndex("RelationId");

                    b.HasIndex("UserId");

                    b.ToTable("ParentDetail");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.PersonalDetail", b =>
                {
                    b.Property<long>("PersonalDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BloodGroupdId")
                        .HasColumnType("bigint");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2(7)");

                    b.Property<long>("GenderId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile1")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Mobile2")
                        .HasColumnType("nvarchar(20)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PersonalEmail1")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PersonalEmail2")
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("ReligionId")
                        .HasColumnType("bigint");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.Property<string>("StayAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StayCityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StayCountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("StayPinCode")
                        .HasColumnType("varchar(10)");

                    b.Property<long?>("StayRelationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StayStateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StayTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("PersonalDetailId");

                    b.HasIndex("BloodGroupdId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CountryId");

                    b.HasIndex("GenderId");

                    b.HasIndex("ReligionId");

                    b.HasIndex("StateId");

                    b.HasIndex("StayCityId");

                    b.HasIndex("StayCountryId");

                    b.HasIndex("StayRelationId");

                    b.HasIndex("StayStateId");

                    b.HasIndex("StayTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("PersonalDetail");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.RelationMaster", b =>
                {
                    b.Property<long>("RelationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("RelationId");

                    b.ToTable("RelationMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.ReligionMaster", b =>
                {
                    b.Property<long>("ReligionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ReligionId");

                    b.ToTable("ReligionMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.SessionMaster", b =>
                {
                    b.Property<long>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionName")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("SessionId");

                    b.ToTable("SessionMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.StateMaster", b =>
                {
                    b.Property<long>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StateId");

                    b.HasIndex("CountryId");

                    b.ToTable("StateMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.StaytypeMaster", b =>
                {
                    b.Property<long>("StaytypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Staytype")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("StaytypeId");

                    b.ToTable("StaytypeMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.StudentAttendance", b =>
                {
                    b.Property<long>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AttendanceBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("datetime");

                    b.Property<long>("ClassId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("LectureId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("SubjectId")
                        .HasColumnType("bigint");

                    b.HasKey("AttendanceId");

                    b.HasIndex("AttendanceBy");

                    b.HasIndex("ClassId");

                    b.HasIndex("LectureId");

                    b.HasIndex("SubjectId");

                    b.ToTable("StudentAttendance");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.StudentAttendanceDetail", b =>
                {
                    b.Property<long>("AttendanceDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AttendanceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPresent")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("AttendanceDetailId");

                    b.ToTable("StudentAttendanceDetail");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.StudentQualication", b =>
                {
                    b.Property<long>("StudentQualicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DegreeBoardName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("DegreeCGPA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("DegreeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DegreeMarkingScheameId")
                        .HasColumnType("bigint");

                    b.Property<string>("DegreeSchoolName")
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("DegreeYear")
                        .HasColumnType("int");

                    b.Property<string>("DiplomaBoardName")
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal?>("DiplomaCGPA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("DiplomaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DiplomaMarkingScheameId")
                        .HasColumnType("bigint");

                    b.Property<string>("DiplomaSchoolName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("DiplomaYear")
                        .HasColumnType("int");

                    b.Property<string>("EntranceExamAir")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EntranceExamCatefgoryRank")
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("EntranceExamId")
                        .HasColumnType("bigint");

                    b.Property<string>("EntranceExamMarkObt")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EntranceExamRollno")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("EntranceExamYear")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEntrance")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PGDegreeBoardName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("PGDegreeCGPA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("PGDegreeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PGDegreeMarkingScheameId")
                        .HasColumnType("bigint");

                    b.Property<string>("PGDegreeSchoolName")
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("PGDegreeYear")
                        .HasColumnType("int");

                    b.Property<string>("TenBoardName")
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal?>("TenCGPA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("TenMarkingScheameId")
                        .HasColumnType("bigint");

                    b.Property<string>("TenSchoolName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TenYearOfPassing")
                        .HasColumnType("int");

                    b.Property<string>("TwelveBoardName")
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal?>("TwelveCGPA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("TwelveMakingScheameId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("TwelvePCM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TwelveSchoolName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TwelveYearOfPassing")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("StudentQualicationId");

                    b.HasIndex("DegreeId");

                    b.HasIndex("DegreeMarkingScheameId");

                    b.HasIndex("DiplomaId");

                    b.HasIndex("DiplomaMarkingScheameId");

                    b.HasIndex("EntranceExamId");

                    b.HasIndex("PGDegreeId");

                    b.HasIndex("PGDegreeMarkingScheameId");

                    b.HasIndex("TenMarkingScheameId");

                    b.HasIndex("TwelveMakingScheameId");

                    b.HasIndex("UserId");

                    b.ToTable("StudentQualication");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.SubjectDepartmentMaster", b =>
                {
                    b.Property<long>("SubjectDepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("SubjectDepartmentId");

                    b.ToTable("SubjectDepartmentMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.SubjectMaster", b =>
                {
                    b.Property<long>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("SubjectDepartmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("SubjectTypeId")
                        .HasColumnType("bigint");

                    b.HasKey("SubjectId");

                    b.HasIndex("SubjectDepartmentId");

                    b.HasIndex("SubjectTypeId");

                    b.ToTable("SubjectMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.SubjectTypeMaster", b =>
                {
                    b.Property<long>("SubjectTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectType")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SubjectTypeId");

                    b.ToTable("SubjectTypeMaster");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.YearSemesterMaster", b =>
                {
                    b.Property<long>("YearSemesterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("YearSemester")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("YearSemesterId");

                    b.ToTable("YearSemesterMaster");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<long>", b =>
                {
                    b.HasOne("StudentManagement.Data.DBContexts.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<long>", b =>
                {
                    b.HasOne("StudentManagement.Data.DBContexts.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<long>", b =>
                {
                    b.HasOne("StudentManagement.Data.DBContexts.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<long>", b =>
                {
                    b.HasOne("StudentManagement.Data.DBContexts.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.DBContexts.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<long>", b =>
                {
                    b.HasOne("StudentManagement.Data.DBContexts.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentManagement.Data.Models.BranchMaster", b =>
                {
                    b.HasOne("StudentManagement.Data.Models.CourseMaster", "CourseMaster")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentManagement.Data.Models.CityMaster", b =>
                {
                    b.HasOne("StudentManagement.Data.Models.StateMaster", "StateMaster")
                        .WithMany()
                        .HasForeignKey("StateId");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.ClassMaster", b =>
                {
                    b.HasOne("StudentManagement.Data.Models.BranchMaster", "BranchMaster")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("StudentManagement.Data.Models.CampusMaster", "CampusMaster")
                        .WithMany()
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.CollegeMaster", "CollegeMaster")
                        .WithMany()
                        .HasForeignKey("CollegeId");

                    b.HasOne("StudentManagement.Data.Models.CourseMaster", "CourseMaster")
                        .WithMany()
                        .HasForeignKey("CourseId");

                    b.HasOne("StudentManagement.Data.Models.SessionMaster", "SessionMaster")
                        .WithMany()
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.YearSemesterMaster", "YearSemesterMaster")
                        .WithMany()
                        .HasForeignKey("YearSemesterId");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.ClassStudentDetail", b =>
                {
                    b.HasOne("StudentManagement.Data.Models.ClassMaster", "ClassMaster")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.DBContexts.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentManagement.Data.Models.ClassSubjectDetail", b =>
                {
                    b.HasOne("StudentManagement.Data.Models.ClassMaster", "ClassMaster")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.SubjectMaster", "SubjectMaster")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentManagement.Data.Models.ClassSubjectTeacherDetail", b =>
                {
                    b.HasOne("StudentManagement.Data.Models.ClassSubjectDetail", "ClassSubjectDetail")
                        .WithMany()
                        .HasForeignKey("ClassSubjectDetailId");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.CollegeDetail", b =>
                {
                    b.HasOne("StudentManagement.Data.Models.BatchMaster", "BatchMaster1")
                        .WithMany()
                        .HasForeignKey("AdmissionBatchTypeId");

                    b.HasOne("StudentManagement.Data.Models.AdmissiontypeMaster", "AdmissiontypeMaster")
                        .WithMany()
                        .HasForeignKey("AdmissionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.BatchMaster", "BatchMaster")
                        .WithMany()
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.CampusMaster", "CampusMaster")
                        .WithMany()
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.CourseMaster", "CourseMaster")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.DBContexts.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.YearSemesterMaster", "YearSemesterMaster")
                        .WithMany()
                        .HasForeignKey("YearSemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.BranchMaster", "BranchMaster")
                        .WithMany()
                        .HasForeignKey("branchId");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.CollegeMaster", b =>
                {
                    b.HasOne("StudentManagement.Data.Models.CampusMaster", "CampusMaster")
                        .WithMany()
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentManagement.Data.Models.Documents", b =>
                {
                    b.HasOne("StudentManagement.Data.DBContexts.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentManagement.Data.Models.HistoryClassStudentDetail", b =>
                {
                    b.HasOne("StudentManagement.Data.Models.ClassMaster", "ClassMaster")
                        .WithMany()
                        .HasForeignKey("ClassId");

                    b.HasOne("StudentManagement.Data.Models.ClassStudentDetail", "ClassStudentDetail")
                        .WithMany()
                        .HasForeignKey("ClassStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.DBContexts.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.HistoryClassSubjectDetail", b =>
                {
                    b.HasOne("StudentManagement.Data.Models.ClassMaster", "ClassMaster")
                        .WithMany()
                        .HasForeignKey("ClassId");

                    b.HasOne("StudentManagement.Data.Models.ClassSubjectDetail", "ClassSubjectDetail")
                        .WithMany()
                        .HasForeignKey("ClassSubjectDetailId");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.HistoryClassSubjectTeacherDetail", b =>
                {
                    b.HasOne("StudentManagement.Data.Models.ClassSubjectTeacherDetail", "ClassSubjectTeacherDetail")
                        .WithMany()
                        .HasForeignKey("ClassSubjectDetailId");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.HistoryCollegeDetail", b =>
                {
                    b.HasOne("StudentManagement.Data.Models.BatchMaster", "BatchMaster1")
                        .WithMany()
                        .HasForeignKey("AdmissionBatchTypeId");

                    b.HasOne("StudentManagement.Data.Models.AdmissiontypeMaster", "AdmissiontypeMaster")
                        .WithMany()
                        .HasForeignKey("AdmissionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.BatchMaster", "BatchMaster")
                        .WithMany()
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.CampusMaster", "CampusMaster")
                        .WithMany()
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.CollegeDetail", "CollegeDetail")
                        .WithMany()
                        .HasForeignKey("CollegeDetailId");

                    b.HasOne("StudentManagement.Data.Models.CourseMaster", "CourseMaster")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.DBContexts.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.YearSemesterMaster", "YearSemesterMaster")
                        .WithMany()
                        .HasForeignKey("YearSemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.BranchMaster", "BranchMaster")
                        .WithMany()
                        .HasForeignKey("branchId");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.HistoryDocuments", b =>
                {
                    b.HasOne("StudentManagement.Data.Models.Documents", "Documents")
                        .WithMany()
                        .HasForeignKey("DocumentId");

                    b.HasOne("StudentManagement.Data.DBContexts.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.HistoryParentDetail", b =>
                {
                    b.HasOne("StudentManagement.Data.Models.CityMaster", "FatherCityMaster")
                        .WithMany()
                        .HasForeignKey("FatherCityId");

                    b.HasOne("StudentManagement.Data.Models.CountryMaster", "FatherCountryMaster")
                        .WithMany()
                        .HasForeignKey("FatherCountryId");

                    b.HasOne("StudentManagement.Data.Models.StateMaster", "FatherStateMaster")
                        .WithMany()
                        .HasForeignKey("FatherStateId");

                    b.HasOne("StudentManagement.Data.Models.CityMaster", "LGCityMaster")
                        .WithMany()
                        .HasForeignKey("LGCityId");

                    b.HasOne("StudentManagement.Data.Models.CountryMaster", "CountryMaster")
                        .WithMany()
                        .HasForeignKey("LGCountryId");

                    b.HasOne("StudentManagement.Data.Models.StateMaster", "LGStateMaster")
                        .WithMany()
                        .HasForeignKey("LGStateId");

                    b.HasOne("StudentManagement.Data.Models.CityMaster", "MotherCityMaster")
                        .WithMany()
                        .HasForeignKey("MotherCityId");

                    b.HasOne("StudentManagement.Data.Models.CountryMaster", "MotherCountryMaster")
                        .WithMany()
                        .HasForeignKey("MotherCountryId");

                    b.HasOne("StudentManagement.Data.Models.StateMaster", "MotherStateMaster")
                        .WithMany()
                        .HasForeignKey("MotherStateId");

                    b.HasOne("StudentManagement.Data.Models.ParentDetail", "ParentDetail")
                        .WithMany()
                        .HasForeignKey("ParentDetailId");

                    b.HasOne("StudentManagement.Data.Models.RelationMaster", "RelationMaster")
                        .WithMany()
                        .HasForeignKey("RelationId");

                    b.HasOne("StudentManagement.Data.DBContexts.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.HistoryPersonalDetail", b =>
                {
                    b.HasOne("StudentManagement.Data.Models.BloodgroupMaster", "BloodgroupMaster")
                        .WithMany()
                        .HasForeignKey("BloodGroupdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.CategoryMaster", "CategoryMaster")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.CityMaster", "CityMaster")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.CountryMaster", "CountryMaster")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.GenderMaster", "GenderMaster")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.PersonalDetail", "PersonalDetail")
                        .WithMany()
                        .HasForeignKey("PersonalDetailId");

                    b.HasOne("StudentManagement.Data.Models.ReligionMaster", "ReligionMaster")
                        .WithMany()
                        .HasForeignKey("ReligionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.StateMaster", "StateMaster")
                        .WithMany()
                        .HasForeignKey("StateId");

                    b.HasOne("StudentManagement.Data.Models.RelationMaster", "RelationMaster")
                        .WithMany()
                        .HasForeignKey("StayRelationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.StaytypeMaster", "StaytypeMaster")
                        .WithMany()
                        .HasForeignKey("StayTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.DBContexts.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.HistoryStudentQualication", b =>
                {
                    b.HasOne("StudentManagement.Data.Models.DegreeMaster", "DegreeMaster")
                        .WithMany()
                        .HasForeignKey("DegreeId");

                    b.HasOne("StudentManagement.Data.Models.MarkingScheame", "MarkingScheame4")
                        .WithMany()
                        .HasForeignKey("DegreeMarkingScheameId");

                    b.HasOne("StudentManagement.Data.Models.DiplomaMaster", "DiplomaMaster")
                        .WithMany()
                        .HasForeignKey("DiplomaId");

                    b.HasOne("StudentManagement.Data.Models.MarkingScheame", "MarkingScheame3")
                        .WithMany()
                        .HasForeignKey("DiplomaMarkingScheameId");

                    b.HasOne("StudentManagement.Data.Models.EntranceExamMaster", "EntranceExamMaster")
                        .WithMany()
                        .HasForeignKey("EntranceExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.PGDegreeMaster", "PGDegreeMaster")
                        .WithMany()
                        .HasForeignKey("PGDegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.MarkingScheame", "MarkingScheame5")
                        .WithMany()
                        .HasForeignKey("PGDegreeMarkingScheameId");

                    b.HasOne("StudentManagement.Data.Models.StudentQualication", "StudentQualication")
                        .WithMany()
                        .HasForeignKey("StudentQualicationId");

                    b.HasOne("StudentManagement.Data.Models.MarkingScheame", "MarkingScheame1")
                        .WithMany()
                        .HasForeignKey("TenMarkingScheameId");

                    b.HasOne("StudentManagement.Data.Models.MarkingScheame", "MarkingScheame2")
                        .WithMany()
                        .HasForeignKey("TwelveMakingScheameId");

                    b.HasOne("StudentManagement.Data.DBContexts.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.ParentDetail", b =>
                {
                    b.HasOne("StudentManagement.Data.Models.CityMaster", "FatherCityMaster")
                        .WithMany()
                        .HasForeignKey("FatherCityId");

                    b.HasOne("StudentManagement.Data.Models.CountryMaster", "FatherCountryMaster")
                        .WithMany()
                        .HasForeignKey("FatherCountryId");

                    b.HasOne("StudentManagement.Data.Models.StateMaster", "FatherStateMaster")
                        .WithMany()
                        .HasForeignKey("FatherStateId");

                    b.HasOne("StudentManagement.Data.Models.CityMaster", "LGCityMaster")
                        .WithMany()
                        .HasForeignKey("LGCityId");

                    b.HasOne("StudentManagement.Data.Models.CountryMaster", "CountryMaster")
                        .WithMany()
                        .HasForeignKey("LGCountryId");

                    b.HasOne("StudentManagement.Data.Models.StateMaster", "LGStateMaster")
                        .WithMany()
                        .HasForeignKey("LGStateId");

                    b.HasOne("StudentManagement.Data.Models.CityMaster", "MotherCityMaster")
                        .WithMany()
                        .HasForeignKey("MotherCityId");

                    b.HasOne("StudentManagement.Data.Models.CountryMaster", "MotherCountryMaster")
                        .WithMany()
                        .HasForeignKey("MotherCountryId");

                    b.HasOne("StudentManagement.Data.Models.StateMaster", "MotherStateMaster")
                        .WithMany()
                        .HasForeignKey("MotherStateId");

                    b.HasOne("StudentManagement.Data.Models.RelationMaster", "RelationMaster")
                        .WithMany()
                        .HasForeignKey("RelationId");

                    b.HasOne("StudentManagement.Data.DBContexts.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentManagement.Data.Models.PersonalDetail", b =>
                {
                    b.HasOne("StudentManagement.Data.Models.BloodgroupMaster", "BloodgroupMaster")
                        .WithMany()
                        .HasForeignKey("BloodGroupdId");

                    b.HasOne("StudentManagement.Data.Models.CategoryMaster", "CategoryMaster")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.CountryMaster", "CountryMaster")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.GenderMaster", "GenderMaster")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.ReligionMaster", "ReligionMaster")
                        .WithMany()
                        .HasForeignKey("ReligionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.StateMaster", "StateMaster")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.CityMaster", "CityMaster1")
                        .WithMany()
                        .HasForeignKey("StayCityId");

                    b.HasOne("StudentManagement.Data.Models.CountryMaster", "CountryMaster1")
                        .WithMany()
                        .HasForeignKey("StayCountryId");

                    b.HasOne("StudentManagement.Data.Models.RelationMaster", "RelationMaster")
                        .WithMany()
                        .HasForeignKey("StayRelationId");

                    b.HasOne("StudentManagement.Data.Models.StateMaster", "StateMaster1")
                        .WithMany()
                        .HasForeignKey("StayStateId");

                    b.HasOne("StudentManagement.Data.Models.StaytypeMaster", "StaytypeMaster")
                        .WithMany()
                        .HasForeignKey("StayTypeId");

                    b.HasOne("StudentManagement.Data.DBContexts.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentManagement.Data.Models.StateMaster", b =>
                {
                    b.HasOne("StudentManagement.Data.Models.CountryMaster", "CountryMaster")
                        .WithMany()
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("StudentManagement.Data.Models.StudentAttendance", b =>
                {
                    b.HasOne("StudentManagement.Data.DBContexts.ApplicationUser", "ApplicationUser1")
                        .WithMany()
                        .HasForeignKey("AttendanceBy");

                    b.HasOne("StudentManagement.Data.Models.ClassMaster", "ClassMaster")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.LectureMaster", "LectureMaster")
                        .WithMany()
                        .HasForeignKey("LectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.SubjectMaster", "SubjectMaster")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentManagement.Data.Models.StudentQualication", b =>
                {
                    b.HasOne("StudentManagement.Data.Models.DegreeMaster", "DegreeMaster")
                        .WithMany()
                        .HasForeignKey("DegreeId");

                    b.HasOne("StudentManagement.Data.Models.MarkingScheame", "MarkingScheame4")
                        .WithMany()
                        .HasForeignKey("DegreeMarkingScheameId");

                    b.HasOne("StudentManagement.Data.Models.DiplomaMaster", "DiplomaMaster")
                        .WithMany()
                        .HasForeignKey("DiplomaId");

                    b.HasOne("StudentManagement.Data.Models.MarkingScheame", "MarkingScheame3")
                        .WithMany()
                        .HasForeignKey("DiplomaMarkingScheameId");

                    b.HasOne("StudentManagement.Data.Models.EntranceExamMaster", "EntranceExamMaster")
                        .WithMany()
                        .HasForeignKey("EntranceExamId");

                    b.HasOne("StudentManagement.Data.Models.PGDegreeMaster", "PGDegreeMaster")
                        .WithMany()
                        .HasForeignKey("PGDegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Data.Models.MarkingScheame", "MarkingScheame5")
                        .WithMany()
                        .HasForeignKey("PGDegreeMarkingScheameId");

                    b.HasOne("StudentManagement.Data.Models.MarkingScheame", "MarkingScheame1")
                        .WithMany()
                        .HasForeignKey("TenMarkingScheameId");

                    b.HasOne("StudentManagement.Data.Models.MarkingScheame", "MarkingScheame2")
                        .WithMany()
                        .HasForeignKey("TwelveMakingScheameId");

                    b.HasOne("StudentManagement.Data.DBContexts.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentManagement.Data.Models.SubjectMaster", b =>
                {
                    b.HasOne("StudentManagement.Data.Models.SubjectDepartmentMaster", "SubjectDepartmentMaster")
                        .WithMany()
                        .HasForeignKey("SubjectDepartmentId");

                    b.HasOne("StudentManagement.Data.Models.SubjectTypeMaster", "SubjectTypeMaster")
                        .WithMany()
                        .HasForeignKey("SubjectTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
